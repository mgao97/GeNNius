data: HeteroData(
  drug={
    node_id=[6823],
    x=[6823, 12],
  },
  protein={
    node_id=[4650],
    x=[4650, 20],
  },
  (drug, interaction, protein)={ edge_index=[2, 23705] },
  (protein, rev_interaction, drug)={ edge_index=[2, 23705] }
)
train_data: HeteroData(
  drug={
    node_id=[6823],
    x=[6823, 12],
  },
  protein={
    node_id=[4650],
    x=[4650, 20],
  },
  (drug, interaction, protein)={
    edge_index=[2, 13276],
    edge_label=[6636],
    edge_label_index=[2, 6636],
  },
  (protein, rev_interaction, drug)={ edge_index=[2, 13276] }
)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
torch.Size([6823, 12]) torch.Size([4650, 20])
drug interaction protein
protein rev_interaction drug
Adjacency matrix for drug_protein: shape is torch.Size([6823, 4650])
Adjacency matrix for protein_drug: shape is torch.Size([4650, 6823])
drug matrix:  torch.Size([6823, 12])
protein matrix:  torch.Size([4650, 20])
Start sampling!
drug_num: 245, protein_num: 55
Sampling end!
25
gnn: GNN_from_raw(
  (gcs): ModuleList(
    (0-1): 2 x GeneralConv(
      (base_conv): HGTConv(in_dim=64, out_dim=64, num_types=2, num_types=2)
    )
  )
  (adapt_ws): ModuleList(
    (0-1): 2 x Linear(in_features=256, out_features=64, bias=True)
  )
  (drop): Dropout(p=0, inplace=False)
  (embedding1): ModuleList(
    (0): Linear(in_features=20, out_features=512, bias=True)
    (1): Linear(in_features=12, out_features=512, bias=True)
  )
  (embedding2): ModuleList(
    (0-1): 2 x Linear(in_features=512, out_features=256, bias=True)
  )
  (decode1): ModuleList(
    (0-1): 2 x Linear(in_features=256, out_features=512, bias=True)
  )
  (decode2): ModuleList(
    (0): Linear(in_features=512, out_features=20, bias=True)
    (1): Linear(in_features=512, out_features=12, bias=True)
  )
)
sub adj: tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]]) torch.Size([6823, 4650])
feats1[i:(ba+i)]: tensor([[0.6980, 0.3040, 0.1518,  ..., 0.2923, 0.3377, 0.3392],
        [0.7443, 0.1766, 0.0838,  ..., 0.1641, 0.1974, 0.1976],
        [0.8180, 0.2523, 0.0838,  ..., 0.1795, 0.2851, 0.2840],
        ...,
        [0.8202, 0.0629, 0.0314,  ..., 0.0308, 0.0702, 0.0720],
        [0.7958, 0.0598, 0.0314,  ..., 0.0308, 0.0658, 0.0680],
        [0.7927, 0.0553, 0.0314,  ..., 0.0308, 0.0614, 0.0632]],
       device='cuda:0') torch.Size([6823, 12])
feats2: tensor([[0.0675, 0.0418, 0.0563,  ..., 0.0595, 0.0225, 0.0338],
        [0.0644, 0.0358, 0.0286,  ..., 0.0458, 0.0071, 0.0372],
        [0.0610, 0.0244, 0.0213,  ..., 0.0518, 0.0274, 0.0305],
        ...,
        [0.0909, 0.0070, 0.0175,  ..., 0.0839, 0.0350, 0.0280],
        [0.0736, 0.0210, 0.0298,  ..., 0.0858, 0.0175, 0.0280],
        [0.0639, 0.0171, 0.0629,  ..., 0.0624, 0.0156, 0.0307]],
       device='cuda:0') torch.Size([4650, 20])
